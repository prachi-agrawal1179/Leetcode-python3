#Solution 1 
import math
import heapq
class Solution:
    def kClosest(self, points: List[List[int]], K: int) -> List[List[int]]:
        heap=[]
        for i in points:
            x=i[0]
            y=i[1]
            distance=math.sqrt(x**2+y**2)
            heapq.heappush(heap,(-distance,i))
            if len(heap)>K:
                heapq.heappop(heap)
        return([t[1] for t in heap])
   
   
   
   #Solution 2
import math
import heapq
class Solution:
    def kClosest(self, points: List[List[int]], K: int) -> List[List[int]]:
        heap=[]
        for i in points:
            x=i[0]
            y=i[1]
            distance=math.sqrt(x**2+y**2)
            heapq.heappush(heap,(-distance,i))
            ans=heapq.nlargest(K,heap)
            final=[b for a,b in ans]
            final.sort()
      return(final)

            
