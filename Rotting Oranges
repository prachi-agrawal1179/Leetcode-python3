class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        r=len(grid)
        c=len(grid[0])
        queue = collections.deque()
        for i in range(r):
            for j in range(c):
                if grid[i][j]==2:
                    queue.append((i,j,0))
        
        count=0
        while queue:
            i,j,count = queue.pop()
            if i-1>=0 and grid[i-1][j]==1:
                grid[i-1][j] = 2
                queue.appendleft((i-1,j,count+1))
            if i+1<r and grid[i+1][j]==1:
                grid[i+1][j] = 2
                queue.appendleft((i+1,j,count+1))
            if j-1>=0 and grid[i][j-1]==1:
                grid[i][j-1] = 2
                queue.appendleft((i,j-1,count+1))
            if j+1<c and grid[i][j+1]==1:
                grid[i][j+1] = 2
                queue.appendleft((i,j+1,count+1))
        
        for i in range(r):
            for j in range(c):
                if grid[i][j]==1:
                    return -1
        return count
                
                
            
            
            
            
            
            
            
       
