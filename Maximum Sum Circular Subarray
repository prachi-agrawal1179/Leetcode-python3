class Solution:
    def maxSubarraySumCircular(self, A: List[int]) -> int:
        '''SOLUTION 1
        def kadane(nums):
            ans = cur = float('-inf')
            for n in nums:
                cur = n + max(cur, 0)
                ans = max(ans, cur)
            return ans
        
        S = sum(A)
        ans1 = kadane(A)
        ans2 = S + kadane(-n for n in A[1:-1])
    
        return max(ans1, ans2)
        '''
        ''' SOLUTION 2 '''
        if max(A) <= 0: return max(A)
        endmax = [i for i in A]
        endmin = [i for i in A]
        for i in range(1,len(A)):
            if endmax[i-1] > 0: endmax[i] += endmax[i-1]
            if endmin[i-1] < 0: endmin[i] += endmin[i-1]

        return max(max(endmax),sum(A) - min(endmin))
